inc "imath.slh"

class int
  oper proc float 1 1
    asm "fild qword[rsp]"
    asm "fstp qword[rsp]"

    ret
  end

  {
  args: int[a] int[b]
  result: int

  returns a ^ b
  }
  proc pow 2 1
    var tmp 8

    tmp swap put disc
    copy
    do
      covr *

      tmp
      tmp read 1 -
      put disc
      tmp read
      0 >
    end
    swap disc

    ret
  end
  
  proc log2 1 1
    -1
    do
      swap 2 /% disc
      swap 1 +

      covr 0 !=
    end
    swap disc

    ret
  end

  proc squared 1 1
    copy *

    ret
  end

  proc sqRoot 1 1
    var rstart 8
    var rend 8
    var rmid 8
    var rres 8

    copy 1 ==
    covr 0 == ||
    if ret end
    copy 0 < if disc 0 ret end
    rstart 1 put disc
    rend covr 2 /% disc put disc
    do
      rmid
      rstart read rend read + 2 /% disc
      put disc

      copy
      rmid read copy *
      == if
        disc rmid read ret
      end
      
      copy
      rmid read copy *
      < ! copy
      if
        rmid read 1 + rstart swap put disc
        rmid read rres swap put disc
      end
      ! if
        rmid read 1 - rend swap put disc
      end

      rstart read rend read > !
    end
    disc

    rres read 

    ret
  end
end

